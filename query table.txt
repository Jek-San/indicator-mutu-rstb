-- Drop tables created by the first query
DROP TABLE IF EXISTS simrs_n_values;
DROP TABLE IF EXISTS simrs_d_values;
DROP TABLE IF EXISTS simrs_indicator;
DROP TABLE IF EXISTS simrs_menu;
DROP TABLE IF EXISTS simrs_unit;

-- New query
CREATE TABLE IF NOT EXISTS simrs_unit (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS simrs_menu (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255),
    unit_id INT,
    FOREIGN KEY (unit_id) REFERENCES simrs_unit(id)
);

CREATE TABLE IF NOT EXISTS simrs_indicator (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255),
    menu_id INT,
    FOREIGN KEY (menu_id) REFERENCES simrs_menu(id)
);

CREATE TABLE IF NOT EXISTS simrs_n_values (
    id INT AUTO_INCREMENT PRIMARY KEY,
    indicator_id INT,
    date DATE,
    value INT,
    FOREIGN KEY (indicator_id) REFERENCES simrs_indicator(id)
);

CREATE TABLE IF NOT EXISTS simrs_d_values (
    id INT AUTO_INCREMENT PRIMARY KEY,
    indicator_id INT,
    date DATE,
    value INT,
    FOREIGN KEY (indicator_id) REFERENCES simrs_indicator(id)
);

CREATE TABLE IF NOT EXISTS simrs_naming (
    id INT AUTO_INCREMENT PRIMARY KEY,
    indicator_id INT,
    n_name VARCHAR(255),
    d_name VARCHAR(255),
    FOREIGN KEY (indicator_id) REFERENCES simrs_indicator(id)
);

CREATE TABLE simrs_mutu_users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
		
);
ALTER TABLE simrs_mutu_users
ADD COLUMN unit_id INT,
ADD COLUMN is_admin BOOLEAN NOT NULL DEFAULT FALSE,
ADD CONSTRAINT fk_unit_id FOREIGN KEY (unit_id) REFERENCES simrs_unit(id);




-- -------------------------------------------
-- QUERY TO INSERT DUMMY DATA
-- Inserting dummy data into the simrs_unit table
-- Inserting dummy data into the simrs_unit table
INSERT INTO simrs_unit (id, name) VALUES
(1, 'Unit HCU'),
(2, 'Unit Perinatologi');

-- Inserting dummy data into the simrs_menu table
INSERT INTO simrs_menu (id, name, unit_id) VALUES
(1, 'Unit', 1),
(2, 'Perawat', 1),
(3, 'Menu 3', 2);

-- Inserting dummy data into the simrs_indicator table
INSERT INTO simrs_indicator (id, name, menu_id) VALUES
(1, 'Kepatuhan jam visite dokter spesialis', 1),
(2, 'Indicator 2', 2),
(3, 'Indicator 3', 3);

-- Inserting dummy data into the simrs_n_values table
INSERT INTO simrs_n_values (id, indicator_id, date, value) VALUES
-- Indicator 1 data
(NULL, 1, '2024-04-01', 3),
(NULL, 1, '2024-04-02', 3),
(NULL, 1, '2024-04-03', 3),
-- Indicator 2 data
(NULL, 2, '2024-04-01', 4),
(NULL, 2, '2024-04-02', 4),
(NULL, 2, '2024-04-03', 4),
-- Indicator 3 data
(NULL, 3, '2024-04-01', 5),
(NULL, 3, '2024-04-02', 5),
(NULL, 3, '2024-04-03', 5);

-- Inserting dummy data into the simrs_d_values table
INSERT INTO simrs_d_values (id, indicator_id, date, value) VALUES
-- Indicator 1 data
(NULL, 1, '2024-04-01', 3),
(NULL, 1, '2024-04-02', 3),
(NULL, 1, '2024-04-03', 3),
-- Indicator 2 data
(NULL, 2, '2024-04-01', 4),
(NULL, 2, '2024-04-02', 4),
(NULL, 2, '2024-04-03', 4),
-- Indicator 3 data
(NULL, 3, '2024-04-01', 5),
(NULL, 3, '2024-04-02', 5),
(NULL, 3, '2024-04-03', 5);

-- Inserting dummy data into the simrs_naming table
INSERT INTO simrs_naming (id, indicator_id, n_name, d_name) VALUES
-- Indicator 1 naming
(NULL, 1, 'Jumlah pasien yang divisite dokter pada pukul 06.00- 14:00', 'Jumlah pasien yang diobservasi'),
-- Indicator 2 naming
(NULL, 2, 'Custom_N_Name_2', 'Custom_D_Name_2'),
-- Indicator 3 naming
(NULL, 3, 'Custom_N_Name_3', 'Custom_D_Name_3');


-- Tes Select

SELECT 
    CONCAT('Data for ', simrs_indicator.name) AS indicator_name,
    CONCAT('Numerator ', simrs_indicator.name) AS numerator_indicator_name,
    CONCAT('Denominator ', simrs_indicator.name) AS denumerator_indicator_name,
    DAY(simrs_n_values.date) AS day,
    simrs_n_values.value AS numerator_value,
    simrs_d_values.value AS denumerator_value
FROM 
    simrs_indicator
LEFT JOIN 
    simrs_n_values ON simrs_indicator.id = simrs_n_values.indicator_id
LEFT JOIN 
    simrs_d_values ON simrs_indicator.id = simrs_d_values.indicator_id
ORDER BY 
    simrs_indicator.id, DAY(simrs_n_values.date);
		

-- tes select 2
SELECT 
    CONCAT('Data for ', simrs_indicator.name) AS indicator_name,
    GROUP_CONCAT(CONCAT('Numerator ', simrs_indicator.name) ORDER BY DAY(simrs_n_values.date) SEPARATOR ', ') AS numerator_indicator_name,
    GROUP_CONCAT(CONCAT('Denominator ', simrs_indicator.name) ORDER BY DAY(simrs_d_values.date) SEPARATOR ', ') AS denumerator_indicator_name,
    GROUP_CONCAT(DAY(simrs_n_values.date) ORDER BY DAY(simrs_n_values.date) SEPARATOR ', ') AS day,
    GROUP_CONCAT(simrs_n_values.value ORDER BY DAY(simrs_n_values.date) SEPARATOR ', ') AS numerator_values,
    GROUP_CONCAT(simrs_d_values.value ORDER BY DAY(simrs_d_values.date) SEPARATOR ', ') AS denominator_values
FROM 
    simrs_indicator
LEFT JOIN 
    simrs_n_values ON simrs_indicator.id = simrs_n_values.indicator_id
LEFT JOIN 
    simrs_d_values ON simrs_indicator.id = simrs_d_values.indicator_id
GROUP BY 
    simrs_indicator.id;



--tes select 3
SELECT 
    CONCAT('Data for ', simrs_indicator.name) AS indicator_name,
    CONCAT('Numerator ', simrs_indicator.name) AS numerator_indicator_name,
    CONCAT('Denominator ', simrs_indicator.name) AS denominator_indicator_name,
    GROUP_CONCAT(DAY(simrs_n_values.date) ORDER BY DAY(simrs_n_values.date) SEPARATOR ', ') AS days,
    GROUP_CONCAT(simrs_n_values.value ORDER BY DAY(simrs_n_values.date) SEPARATOR ', ') AS numerator_values,
    GROUP_CONCAT(simrs_d_values.value ORDER BY DAY(simrs_d_values.date) SEPARATOR ', ') AS denominator_values
FROM 
    simrs_indicator
LEFT JOIN 
    simrs_n_values ON simrs_indicator.id = simrs_n_values.indicator_id
LEFT JOIN 
    simrs_d_values ON simrs_indicator.id = simrs_d_values.indicator_id
GROUP BY 
    simrs_indicator.id;
